@model PointOfSale.Shared.ViewModels.StaffResetPasswordViewModel

@{
    ViewData["Title"] = "Reset Staff Password";
}

<h2 class="mb-4"><i class="bi bi-lock-fill"></i> Reset Staff Password</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

<form asp-action="ResetPassword" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="StaffId" />

    <div class="mb-3">
        <label class="form-label">Staff</label>
        <input type="text" class="form-control" value="@($"{Model.FullName} ({Model.Username})")" disabled />
    </div>

    <div class="mb-3">
        <label asp-for="NewPassword" class="form-label"></label>
        <input asp-for="NewPassword" class="form-control" type="password" />
        <span asp-validation-for="NewPassword" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="ConfirmPassword" class="form-label"></label>
        <input asp-for="ConfirmPassword" class="form-control" type="password" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-danger me-2"><i class="bi bi-lock"></i> Reset Password</button>
    <a asp-action="Index" class="btn btn-secondary"><i class="bi bi-arrow-left-circle"></i> Back to Staff List</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
